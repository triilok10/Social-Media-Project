@{
    ViewData["Title"] = "ChatMessanger";
}
@model Social_Media_Project.Models.MediaPost;

<style>
    .chat-container {
        width: 800px;
        height: 100vh;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ddd;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
    }

    .chat-header {
        display: flex;
        align-items: center;
        padding: 10px;
        margin-bottom: 10px;
    }

        .chat-header .profile-pic {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #666;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2em;
            font-weight: bold;
            margin-right: 10px;
        }

    .profile-picImg {
        height: 50px;
        width: 50px;
        border-radius: 50%;
        padding: 4px;
    }

        .chat-header .username {
            font-size: 1.5em;
            font-weight: bold;
            font-family: Arial, sans-serif;
        }

    .dynamic-heading {
        text-align: center;
        font-family: Arial, sans-serif;
        font-size: 2em;
        font-weight: bold;
        background: linear-gradient(270deg, #ff6f61, #ff8a50, #ffb347, #85e085, #3c8dbc, #b92b27);
        background-size: 1200% 1200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: gradient-animation 10s ease infinite;
    }

    @@keyframes gradient-animation {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

    .chat-window {
        flex-grow: 1;
        overflow-y: auto;
        padding: 10px;
        background-color: #f9f9f9;
        border-radius: 8px;
        border: 1px solid #ddd;
        margin-bottom: 10px;
    }

    .message {
        display: flex;
        margin-bottom: 15px;
        align-items: flex-start;
    }

        .message.sent {
            justify-content: flex-end;
        }

        .message.received {
            justify-content: flex-start;
        }

        .message .profile-pic {
            width: 40px;
            height: 40px;
            background-color: #666;
            color: #fff;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-left: 10px;
        }

        .message.sent .profile-pic {
            margin-left: 10px;
            margin-right: 0;
            order: 2;
        }

        .message.received .profile-pic {
            margin-right: 10px;
            margin-left: 0;
        }

        .message .message-content {
            max-width: 70%;
            padding: 10px;
            border-radius: 8px;
            font-family: Arial, sans-serif;
            color: #fff;
        }

        .message.sent .message-content {
            background-color: #ff6f61; /* Red/Pink background for sent messages */
            align-self: flex-end;
            order: 1;
        }

        .message.received .message-content {
            background-color: #007bff; /* Blue background for received messages */
            align-self: flex-start;
        }

    .chat-input {
        display: flex;
        align-items: center;
        padding: 10px;
        border-top: 1px solid #ddd;
        background-color: #fff;
        border-radius: 0 0 8px 8px;
    }

        .chat-input input[type="text"] {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 20px;
            font-size: 16px;
            outline: none;
        }

        .chat-input button {
            margin-left: 10px;
            padding: 10px 20px;
            border: none;
            background-color: #007bff;
            color: #fff;
            border-radius: 20px;
            font-size: 16px;
            cursor: pointer;
        }

            .chat-input button:hover {
                background-color: #0056b3;
            }
</style>

<div class="chat-container">
    <h1 class="dynamic-heading">ChatMessenger</h1>
    <div class="chat-header">
        <div class="profile-pic"><img src="@Model.ProfilePhotoPath" class="profile-picImg" /></div> <!-- Placeholder for Profile Pic -->
        <div class="username">@Model.Username</div>
    </div>
    <div class="chat-window">
        <!-- Chat messages go here -->
    </div>
    <div class="chat-input">
        <input type="text" placeholder="Type a message..." />
        <button>Send</button>
    </div>
</div>

<script src="~/js/firebase-app.js"></script>
<script src="~/js/firebase-messaging.js"></script>


<script>
    // Firebase configuration
    const firebaseConfig = {
        apiKey: "AIzaSyBpvaTISi5cJLmO71U4PsvDgLlGhFYlk70",
        authDomain: "socialmediaproject-60457.firebaseapp.com",
        projectId: "socialmediaproject-60457",
        storageBucket: "socialmediaproject-60457.appspot.com",
        messagingSenderId: "492049714309",
        appId: "1:492049714309:web:8c603d2416bff737f5adec"
    };

    // Initialize Firebase
    debugger;
    firebase.initializeApp(firebaseConfig);

    // Initialize Firebase Cloud Messaging and request permission
    const messaging = firebase.messaging();

    messaging.requestPermission()
        .then(() => messaging.getToken())
        .then((token) => {
            console.log('FCM Token:', token);
            // Store or send this token to your server to associate with the user
        })
        .catch((err) => {
            console.error('Permission denied or error getting token', err);
        });

    // Handle incoming messages
    messaging.onMessage((payload) => {
        console.log('Message received:', payload);
        displayMessage(payload.notification.title, payload.notification.body, false);
    });

    // Function to display the message in the chat UI
    function displayMessage(user, message, isSent) {
        const msgDiv = document.createElement("div");
        msgDiv.classList.add("message", isSent ? "sent" : "received");

        const profilePicDiv = document.createElement("div");
        profilePicDiv.classList.add("profile-pic");
        profilePicDiv.textContent = user.charAt(0);

        const msgContentDiv = document.createElement("div");
        msgContentDiv.classList.add("message-content");
        msgContentDiv.textContent = message;

        msgDiv.appendChild(profilePicDiv);
        msgDiv.appendChild(msgContentDiv);

        document.querySelector(".chat-window").appendChild(msgDiv);
    }

    // Send message from the client to the server
    document.addEventListener("DOMContentLoaded", () => {
        const button = document.querySelector(".chat-input button");
        if (button) {
            button.addEventListener("click", () => {
                const messageContent = document.querySelector(".chat-input input[type='text']").value;
                const recipientUserId = "SomeRecipientUserId";
                sendMessageToServer(recipientUserId, messageContent);
                displayMessage("triilok10", messageContent, true);
                document.querySelector(".chat-input input[type='text']").value = '';
            });
        } else {
            console.error('Button not found');
        }
    });

  
    // Function to send the message to the server
    function sendMessageToServer(recipientUserId, messageContent) {
        fetch('../api/FirebaseMessagingAPI/SendMessage', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ recipientUserId, messageContent })
        })
            .then(response => response.json())
            .then(data => {
                console.log('Message sent successfully:', data);
            })
            .catch(err => console.error('Error sending message:', err));
    }
</script>